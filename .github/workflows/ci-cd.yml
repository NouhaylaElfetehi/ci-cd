name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  create:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            TAG="dev"
          else
            TAG="${{ github.ref }}"
          fi
          docker build -t my-app:${TAG} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push my-app:${TAG}

      - name: Notify Google Chat
        run: |
          curl -X POST -H 'Content-Type: application/json' \
          -d '{
                "text": "Pipeline Status: ${{ job.status }}\nCommit: ${{ github.sha }}"
              }' ${{ secrets.GOOGLE_CHAT_WEBHOOK }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Kubernetes context
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Update image
        run: |
          kubectl set image deployment/my-app my-app=my-app:${TAG}
